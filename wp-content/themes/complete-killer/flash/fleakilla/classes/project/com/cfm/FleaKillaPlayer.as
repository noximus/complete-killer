package com.cfm{	import flash.display.*;	import flash.events.*;	import flash.errors.*;	import flash.net.*;	import com.cfm.*;	import com.greensock.*;	import com.greensock.easing.*;	import br.com.stimuli.loading.loadingtypes.LoadingItem;	import br.com.stimuli.loading.BulkLoader;		public class FleaKillaPlayer extends MovieClip	{		private var _model:AppModel;		private var _shell:Sprite;		private var _intro:MovieClip;		private var _loader : BulkLoader;		private var _imagesToLoad : Array = [];		public function FleaKillaPlayer():void		{			addEventListener(Event.ADDED_TO_STAGE,_initialize,false,0,true);		}				private function _initialize(event : Event):void		{			removeEventListener(Event.ADDED_TO_STAGE,_initialize);			_createModel();			_createViews();						if(loaderInfo.parameters.standAlone != "true")			{				_initApp();			}			else			{				//if standalone, don't call _initApp until after finished loading				_loader = new BulkLoader("FleaKillah");				loadFlashVars(loaderInfo.parameters);			}		}				private function _createModel():void		{			_model = AppModel.getInstance();			_model.addEventListener("onPageChange",_swapPage,false,0,true);		}				public function loadFlashVars(params : Object) : void		{			trace("FleaKillaPlayer: loadFlashVars");			trace("FleaKillaPlayer: loadFlashVars: params.position1: ", params.position1);			 			 			 if(params.position1 != null && params.position1 != "")			 {			 	_imagesToLoad[0] = params.position1;				 }			 if(params.position2 != null && params.position2 != "")			 {			 	_imagesToLoad[1] = params.position2;				 }			 if(params.position3 != null && params.position3 != "")			 {			 	_imagesToLoad[2] = params.position3;				 }			 if(params.position4 != null && params.position4 != "")			 {			 	_imagesToLoad[3] = params.position4;				 }			 if(params.position5 != null && params.position5 != "")			 {			 	_imagesToLoad[4] = params.position5;				 }			 trace("FleaKillaPlayer: loadFlashVars: _imagesToLoad: ", _imagesToLoad);			 			 _loader.addEventListener(BulkLoader.COMPLETE, loadCompleteHandler);			 var n:int = _imagesToLoad.length;			 for (var i:int = 0; i < n; i++)			 {			     if(_imagesToLoad[i] != null)			     {					var item : LoadingItem = _loader.add(_imagesToLoad[i]);					item.addEventListener(BulkLoader.COMPLETE, itemCompleteHandler);				 }			}			_loader.start();		}		private function itemCompleteHandler(event : Event) : void		{			var item : LoadingItem = LoadingItem(event.target);			trace("FleaKillaPlayer: itemCompleteHandler: item.id: ", item.id);			item.removeEventListener(BulkLoader.COMPLETE, itemCompleteHandler);			var bitmap : Bitmap = Bitmap(item.content);						_model.assignLoadedImage(bitmap, lookupIndex(item.url.url));		}				private function loadCompleteHandler(event : Event) : void		{			trace("FleaKillaPlayer: loadCompleteHandler");			_loader.removeEventListener(BulkLoader.COMPLETE, loadCompleteHandler);			_initApp();		}				private function lookupIndex(url : String) : int		{			var n : int = _imagesToLoad.length;			for (var i:int = 0; i < n; i++)			{			 	trace("FleaKillaPlayer: lookupIndex: _imagesToLoad[i]: ", _imagesToLoad[i]);			 	if(_imagesToLoad[i] != null && _imagesToLoad[i] == url)				{			 		return i;   			 	}			}			return -1;		}		private function _createViews():void		{			_shell = new Sprite();			addChild(_shell);			_intro = new VideoPreview();			_shell.addChild(_intro);		}				private function _initApp():void		{			trace("FleaKillaPlayer: _initApp");			_model.currPage = _intro;			TweenMax.to(_intro,1,{delay:1,alpha:1,ease:Sine.easeOut});		}				private function _swapPage(e:Event):void		{			trace("loading page");			TweenMax.to(_model.currPage,0.25,{alpha:0,ease:Sine.easeOut,onComplete:function(){				_model.currPage.x = stage.stageWidth;								while(_shell.numChildren > 1) _shell.removeChildAt(_shell.numChildren-1);				_model.nextPage.alpha = 0;				_shell.addChild(_model.nextPage);								TweenMax.to(_model.nextPage,0.5,{alpha:1,delay:0.25,ease:Sine.easeOut,onComplete:function(){					_model.currPage = _model.nextPage;					_model.nextPage = null;				}});			}});		}	}}