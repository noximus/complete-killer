package com.cfm {	import flash.external.ExternalInterface;	import flash.net.navigateToURL;	import flash.net.URLRequest;	import flash.display.Bitmap;	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	public class VideoPreview extends MovieClip 	{		public var videoHolder : VideoHolder;		public var closePreview : MovieClip;				public var createOwnButton : MovieClip;		public var shareButton : MovieClip;		public var finishedButton : MovieClip;				private var _model : AppModel;		private var _isStandAlone : Boolean;		public function VideoPreview()		{				_model = AppModel.getInstance();			_isStandAlone = _model.getStandAloneStatus();			addEventListener(Event.ADDED_TO_STAGE, initialize, false, 0, true);		}				private function initialize(event : Event) : void		{			removeEventListener(Event.ADDED_TO_STAGE, initialize);						if(_isStandAlone)			{				initStandAloneButtons();				_model.trackPage("ent/flea_killah/watch");			}			else			{				initDefaultButtons();			}						var images : Array = _model.getAssignedImages();			var n:int = images.length;			for (var i:int = 0; i < n; i++)			{			    if(images[i] != null)			    {				    videoHolder.trackers.addHead(Bitmap(images[i]), i);			    }			}			videoHolder.trackers.disableUnusedTrackers();			videoHolder.player.playClip("fleakillah_600x337_opt.f4v");		}				private function initStandAloneButtons() : void		{			closePreview.visible = false;						createOwnButton.buttonMode = true;			createOwnButton.addEventListener(MouseEvent.CLICK, createOwnHandler);						shareButton.buttonMode = true;			shareButton.addEventListener(MouseEvent.CLICK, shareHandler);						finishedButton.buttonMode = true;			finishedButton.addEventListener(MouseEvent.CLICK, finishedHandler);		}				private function finishedHandler(event : MouseEvent) : void		{			navigateToURL(new URLRequest("javascript:flashAnalytics('ent/flea_killah/watch/finished','http://www.completekiller.com')"),"_self");			//_model.trackPage("ent/flea_killah/watch/finished");		}		private function shareHandler(event : MouseEvent) : void		{			videoHolder.player.destroy();						if(_model.getShareID() == "" || _model.getShareID() == null)			{				var urlPath : String = ExternalInterface.call("window.location.href.toString");				//just scraping off the end for now, should be passed in				var shareID : String = urlPath.slice(urlPath.lastIndexOf("/"));				if(shareID != "") 				{					_model.setShareID(shareID);				}				else				{					throw new Error("Share ID could not be retrieved.");					return;				}			}			_model.requestPage("share");						_model.trackPage("ent/flea_killah/watch/share");		}		private function createOwnHandler(event : MouseEvent) : void		{			videoHolder.player.destroy();			_model.reset();			_model.requestPage("intro");			_model.trackPage("ent/flea_killah/watch/create_your_own");		}		private function initDefaultButtons() : void		{			closePreview.visible = true;			closePreview.addEventListener(MouseEvent.CLICK, closePreviewHandler);			closePreview.buttonMode = true;						createOwnButton.visible = false;			shareButton.visible = false;			finishedButton.visible = false;		}		private function closePreviewHandler(event : MouseEvent) : void		{			videoHolder.player.destroy();			_model.requestPage("assign");		}	}}