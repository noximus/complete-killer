package com.cfm {	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.net.NetConnection;	import flash.net.ObjectEncoding;	import flash.net.Responder;	import com.greensock.TweenLite;	import com.greensock.easing.Circ;	public class EmailFormPopup extends MovieClip 	{		public var self : EmailFormPopup;		public var submitButton : MovieClip;		public var message : MovieClip;		public var messageMask : MovieClip;		public var closeButton : MovieClip;		public var bg : MovieClip;		public var page1 : Sprite;		public var _messageStartY : Number = 608;		public var _messageStopY : Number = 394;		public var _friends : Array = [];		public var _userInput : InputPair;		public var _server : NetConnection;		public var _model : AppModel;		public var _response : Responder;		public function EmailFormPopup()		{						self = this;			_model = AppModel.getInstance();			init();		}		public function init() : void		{			alpha = 0;			visible = false;						message.mask = messageMask;			messageMask.visible = false;			message.okButton.buttonMode = true;			submitButton.buttonMode = true;			submitButton.addEventListener(MouseEvent.CLICK, submitData, false, 0, true);			closeButton.buttonMode = true;			closeButton.addEventListener(MouseEvent.CLICK, closeHandler, false, 0, true);						bg.addEventListener(MouseEvent.CLICK, clickStop, false, 0, true);						createPage();		}		private function createPage() : void		{			/*			var yMarker : Number = 112;			var tabNum:Number = 1;						page1 = new Sprite();			addChildAt(page1, getChildIndex(message));						_userInput = new InputPair("YOUR NAME*", "YOUR EMAIL*");			_userInput.x = 282;			_userInput.y = yMarker;			page1.addChild(_userInput);						_userInput.nameLabel.tabIndex = tabNum;			tabNum++;			_userInput.emailLabel.tabIndex = tabNum;			tabNum++;						for (var i : int = 1;i < 5;i++)			{				var input : InputPair = new InputPair("FRIEND " + i + " NAME", "FRIEND " + i + " EMAIL");				yMarker += 78;				input.x = 282;				input.y = yMarker;				page1.addChild(input);				_friends.push(input);								input.nameLabel.tabIndex = tabNum;				tabNum++;				input.emailLabel.tabIndex = tabNum;				tabNum++;			}			*/						//Set field labels			txtName1.tabIndex = 1;			txtName1.tabEnabled = true;			txtEmail1.tabIndex = 2;			txtEmail1.tabEnabled = true;						txtName2.tabIndex = 3;			txtName2.tabEnabled = true;			txtEmail2.tabIndex = 4;			txtEmail2.tabEnabled = true;						txtName3.tabIndex = 5;			txtName3.tabEnabled = true;			txtEmail3.tabIndex = 6;			txtEmail3.tabEnabled = true;						txtName4.tabIndex = 7;			txtName4.tabEnabled = true;			txtEmail4.tabIndex = 8;			txtEmail4.tabEnabled = true;						txtName5.tabIndex = 9;			txtName5.tabEnabled = true;			txtEmail5.tabIndex = 10;			txtEmail5.tabEnabled = true;		}		///////////////////////////////////////////////////////////////////////////				private function submitData(event : MouseEvent) : void		{			if(_model.getStandAloneStatus())			{								_model.trackPage("ent/flea_killah/watch/email_send");			}			else			{				_model.trackPage("ent/flea_killah/share_email_send");			}						/*			trace("EmailFormPopup: submitData: _model.getShareLink(); : ", _model.getShareLink());			if(!_userInput.hasData())			{				showMessage("Please provide your name and email address");				return;			}						var friendObjs : Array = [];			var n : int = _friends.length;			for (var i : int = 0;i < n;i++)			{				var pair : InputPair = _friends[i] as InputPair;				if(pair.hasData()) friendObjs.push(pair.getObject());			}			trace("EmailFormPopup: submitData: friendObjs.length: ", friendObjs.length);			if(friendObjs.length < 1)			{				showMessage("Please provide the name and email address of at least one friend");				return;			}			*/						var errors:int = 0;			var f_err1:Boolean = false;			var f_err2:Boolean = false;			var f_err3:Boolean = false;			var f_err4:Boolean = false;						if(txtName1.text == "" && txtEmail1.text == "")			{				errors++;				showMessage("Please provide your name and email address");				return;			}			else if(txtName1.text != "" && txtEmail1.text == "")			{				errors++;				showMessage("Please provide your email address");				return;			}			else if(txtName1.text == "" && txtEmail1.text != "")			{				errors++;				showMessage("Please provide your name");				return;			}						//=========================================================================================						if(txtName2.text == "" && txtEmail2.text == "" && txtName3.text == "" && txtEmail3.text == "" && txtName4.text == "" && txtEmail4.text == "" && txtName5.text == "" && txtEmail5.text == "")			{				errors++;				showMessage("Please provide the name and email address of at least one friend");				return;			}			else			{				if(txtName2.text != "" && txtEmail2.text == "" || txtName2.text == "" && txtEmail2.text != ""){					errors++;					showMessage("Friend #1 information is incomplete");					return;				}				if(txtName3.text != "" && txtEmail3.text == "" || txtName3.text == "" && txtEmail3.text != ""){					errors++;					showMessage("Friend #2 information is incomplete");					return;				}				if(txtName4.text != "" && txtEmail4.text == "" || txtName4.text == "" && txtEmail4.text != ""){					errors++;					showMessage("Friend #3 information is incomplete");					return;				}				if(txtName5.text != "" && txtEmail5.text == "" || txtName5.text == "" && txtEmail5.text != ""){					errors++;					showMessage("Friend #4 information is incomplete");					return;				}			}						if(errors == 0)			{				var data : Object = new Object();				data.shareLink = _model.getShareID(); 								data.userName = txtName1.text;				data.userEmail = txtEmail1.text;								data.friend1Name = txtName2.text;				data.friend1Email = txtEmail2.text;								data.friend2Name = txtName3.text;				data.friend2Email = txtEmail3.text;								data.friend3Name = txtName4.text;				data.friend3Email = txtEmail4.text;								data.friend4Name = txtName5.text;				data.friend4Email = txtEmail5.text;								var server : NetConnection = new NetConnection();				server.objectEncoding = ObjectEncoding.AMF3;				server.connect(_model.getServiceURL());				var response = new Responder(submitComplete, submitError);				server.call("JibModel.sendToFriend", response, data);			}		}		private function submitComplete(response : Object) : void		{			if(response == "success")			{				showTerminalMessage("Thank you!");			}			else			{				var err : String = "";				if(response is Object)				{					for(var prop : String in response)					{						if(response[prop] != null && response[prop] != "")						{							err += response[prop] + "\n";						}					}				}								showMessage("Plese check the following items:\n" + err);			}					}		private function submitError(response : Object) : void		{			trace("EmailFormPopup: submitError: response: ", response);			showTerminalMessage("We're sorry, but something went wrong. Please try again.");		}				///////////////////////////////////////////////////////////////////////////		private function showMessage(messageText : String) : void		{			message.visible = true;			message.label.text = messageText;			message.okButton.addEventListener(MouseEvent.CLICK, closeMessageHandler);			TweenLite.to(message, 0.5, {y:_messageStopY, ease:Circ.easeOut});		}				private function closeMessageHandler(event : MouseEvent) : void		{			TweenLite.to(message, 0.3, {y:_messageStartY, ease:Circ.easeIn, onComplete:resetMessage});		}				private function resetMessage() : void		{			message.okButton.removeEventListener(MouseEvent.CLICK, closeMessageHandler);			message.visible = false;			message.label.text = "";		}				private function showTerminalMessage(messageText : String) : void		{			message.visible = true;			message.label.text = messageText;			message.okButton.addEventListener(MouseEvent.CLICK, closeFormHandler);			TweenLite.to(message, 0.5, {y:_messageStopY, ease:Circ.easeOut});		}				private function closeFormHandler(event : MouseEvent) : void		{			TweenLite.to(message, 0.3, {y:_messageStartY, ease:Circ.easeIn, onComplete:closeForm});		}				private function closeForm() : void		{			message.okButton.removeEventListener(MouseEvent.CLICK, closeFormHandler);			message.visible = false;			message.label.text = "";						hide();		}				private function clearForm() : void		{			/*			_userInput.clear();			var n : int = _friends.length;			for (var i : int = 0;i < n;i++)			{				var pair : InputPair = _friends[i] as InputPair;				if(pair.hasData()) pair.clear();			}			*/			txtName1.text = "";			txtEmail1.text = "";						txtName2.text = "";			txtEmail2.text = "";						txtName3.text = "";			txtEmail3.text = "";						txtName4.text = "";			txtEmail4.text = "";						txtName5.text = "";			txtEmail5.text = "";		}				private function closeHandler(event : MouseEvent) : void		{			hide();		}				///////////////////////////////////////////////////////////////////////////				public function hide() : void		{			TweenLite.to(this, 0.4, {autoAlpha:0, onComplete:clearForm});		}				public function show() : void		{			TweenLite.to(this, 0.4, {autoAlpha:1});		}				private function clickStop(event : MouseEvent) : void		{		}	}}